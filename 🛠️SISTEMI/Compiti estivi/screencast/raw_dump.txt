=== COMPILAZIONE (no PIE, con frame pointer, debug) ===

=== SEZIONI ELF (readelf -S) ===
There are 37 section headers, starting at offset 0x3eb8:

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .note.gnu.pr[...] NOTE             0000000000400388  00000388
       0000000000000040  0000000000000000   A       0     0     8
  [ 2] .note.gnu.bu[...] NOTE             00000000004003c8  000003c8
       0000000000000024  0000000000000000   A       0     0     4
  [ 3] .interp           PROGBITS         00000000004003ec  000003ec
       000000000000001c  0000000000000000   A       0     0     1
  [ 4] .gnu.hash         GNU_HASH         0000000000400408  00000408
       000000000000001c  0000000000000000   A       5     0     8
  [ 5] .dynsym           DYNSYM           0000000000400428  00000428
       0000000000000138  0000000000000018   A       6     1     8
  [ 6] .dynstr           STRTAB           0000000000400560  00000560
       00000000000000bc  0000000000000000   A       0     0     1
  [ 7] .gnu.version      VERSYM           000000000040061c  0000061c
       000000000000001a  0000000000000002   A       5     0     2
  [ 8] .gnu.version_r    VERNEED          0000000000400638  00000638
       0000000000000040  0000000000000000   A       6     1     8
  [ 9] .rela.dyn         RELA             0000000000400678  00000678
       0000000000000060  0000000000000018   A       5     0     8
  [10] .rela.plt         RELA             00000000004006d8  000006d8
       00000000000000c0  0000000000000018  AI       5    24     8
  [11] .init             PROGBITS         0000000000401000  00001000
       000000000000001b  0000000000000000  AX       0     0     4
  [12] .plt              PROGBITS         0000000000401020  00001020
       0000000000000090  0000000000000010  AX       0     0     16
  [13] .text             PROGBITS         00000000004010b0  000010b0
       000000000000046d  0000000000000000  AX       0     0     16
  [14] .fini             PROGBITS         0000000000401520  00001520
       000000000000000d  0000000000000000  AX       0     0     4
  [15] .rodata           PROGBITS         0000000000402000  00002000
       000000000000018c  0000000000000000   A       0     0     8
  [16] .eh_frame_hdr     PROGBITS         000000000040218c  0000218c
       0000000000000044  0000000000000000   A       0     0     4
  [17] .eh_frame         PROGBITS         00000000004021d0  000021d0
       00000000000000ec  0000000000000000   A       0     0     8
  [18] .sframe           GNU_SFRAME       00000000004022c0  000022c0
       0000000000000067  0000000000000000   A       0     0     8
  [19] .note.ABI-tag     NOTE             0000000000402344  00002344
       0000000000000020  0000000000000000   A       0     0     4
  [20] .init_array       INIT_ARRAY       0000000000403de8  00002de8
       0000000000000008  0000000000000008  WA       0     0     8
  [21] .fini_array       FINI_ARRAY       0000000000403df0  00002df0
       0000000000000008  0000000000000008  WA       0     0     8
  [22] .dynamic          DYNAMIC          0000000000403df8  00002df8
       00000000000001d0  0000000000000010  WA       6     0     8
  [23] .got              PROGBITS         0000000000403fc8  00002fc8
       0000000000000020  0000000000000008  WA       0     0     8
  [24] .got.plt          PROGBITS         0000000000403fe8  00002fe8
       0000000000000058  0000000000000008  WA       0     0     8
  [25] .data             PROGBITS         0000000000404040  00003040
       0000000000000018  0000000000000000  WA       0     0     8
  [26] .bss              NOBITS           0000000000404060  00003058
       0000000000000360  0000000000000000  WA       0     0     32
  [27] .comment          PROGBITS         0000000000000000  00003058
       000000000000001b  0000000000000001  MS       0     0     1
  [28] .debug_aranges    PROGBITS         0000000000000000  00003073
       0000000000000030  0000000000000000           0     0     1
  [29] .debug_info       PROGBITS         0000000000000000  000030a3
       00000000000002da  0000000000000000           0     0     1
  [30] .debug_abbrev     PROGBITS         0000000000000000  0000337d
       0000000000000159  0000000000000000           0     0     1
  [31] .debug_line       PROGBITS         0000000000000000  000034d6
       0000000000000136  0000000000000000           0     0     1
  [32] .debug_str        PROGBITS         0000000000000000  0000360c
       000000000000012f  0000000000000001  MS       0     0     1
  [33] .debug_line_str   PROGBITS         0000000000000000  0000373b
       00000000000000b7  0000000000000001  MS       0     0     1
  [34] .symtab           SYMTAB           0000000000000000  000037f8
       0000000000000378  0000000000000018          35     6     8
  [35] .strtab           STRTAB           0000000000000000  00003b70
       00000000000001d7  0000000000000000           0     0     1
  [36] .shstrtab         STRTAB           0000000000000000  00003d47
       000000000000016e  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), l (large), p (processor specific)

=== SYMBOLS (readelf -s) ===

Symbol table '.dynsym' contains 13 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND free@GLIBC_2.2.5 (2)
     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.34 (3)
     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterT[...]
     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@GLIBC_2.2.5 (2)
     5: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (2)
     6: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@GLIBC_2.2.5 (2)
     7: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __[...]@GLIBC_2.4 (4)
     8: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@GLIBC_2.2.5 (2)
     9: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@GLIBC_2.2.5 (2)
    10: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
    11: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@GLIBC_2.2.5 (2)
    12: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMC[...]

Symbol table '.symtab' contains 37 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS simple_v2.c
     2: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
     3: 0000000000403df8     0 OBJECT  LOCAL  DEFAULT   22 _DYNAMIC
     4: 000000000040218c     0 NOTYPE  LOCAL  DEFAULT   16 __GNU_EH_FRAME_HDR
     5: 0000000000403fe8     0 OBJECT  LOCAL  DEFAULT   24 _GLOBAL_OFFSET_TABLE_
     6: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND free@GLIBC_2.2.5
     7: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_mai[...]
     8: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterT[...]
     9: 0000000000404040     0 NOTYPE  WEAK   DEFAULT   25 data_start
    10: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strcpy@GLIBC_2.2.5
    11: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5
    12: 0000000000404058     0 NOTYPE  GLOBAL DEFAULT   25 _edata
    13: 0000000000401520     0 FUNC    GLOBAL HIDDEN    14 _fini
    14: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strlen@GLIBC_2.2.5
    15: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __stack_chk_fail[...]
    16: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND printf@GLIBC_2.2.5
    17: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND snprintf@GLIBC_2.2.5
    18: 0000000000404050     8 OBJECT  GLOBAL DEFAULT   25 exename
    19: 0000000000401287   100 FUNC    GLOBAL DEFAULT   13 printrub
    20: 0000000000404040     0 NOTYPE  GLOBAL DEFAULT   25 __data_start
    21: 00000000004040a0   800 OBJECT  GLOBAL DEFAULT   26 rubr_dyn
    22: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
    23: 0000000000404048     0 OBJECT  GLOBAL HIDDEN    25 __dso_handle
    24: 0000000000402000     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used
    25: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND malloc@GLIBC_2.2.5
    26: 00000000004043c0     0 NOTYPE  GLOBAL DEFAULT   26 _end
    27: 00000000004010e0     5 FUNC    GLOBAL HIDDEN    13 _dl_relocate_sta[...]
    28: 00000000004010b0    38 FUNC    GLOBAL DEFAULT   13 _start
    29: 0000000000404080     4 OBJECT  GLOBAL DEFAULT   26 tot_cc
    30: 0000000000404060     0 NOTYPE  GLOBAL DEFAULT   26 __bss_start
    31: 0000000000401415   264 FUNC    GLOBAL DEFAULT   13 main
    32: 0000000000401196   241 FUNC    GLOBAL DEFAULT   13 add_cc
    33: 0000000000404058     0 OBJECT  GLOBAL HIDDEN    25 __TMC_END__
    34: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMC[...]
    35: 00000000004012eb   298 FUNC    GLOBAL DEFAULT   13 memoryLayout
    36: 0000000000401000     0 FUNC    GLOBAL HIDDEN    11 _init

=== NM (sorted symbols) ===
                 U free@GLIBC_2.2.5
                 w __gmon_start__
                 w _ITM_deregisterTMCloneTable
                 w _ITM_registerTMCloneTable
                 U __libc_start_main@GLIBC_2.34
                 U malloc@GLIBC_2.2.5
                 U printf@GLIBC_2.2.5
                 U puts@GLIBC_2.2.5
                 U snprintf@GLIBC_2.2.5
                 U __stack_chk_fail@GLIBC_2.4
                 U strcpy@GLIBC_2.2.5
                 U strlen@GLIBC_2.2.5
0000000000401000 T _init
00000000004010b0 T _start
00000000004010e0 T _dl_relocate_static_pie
0000000000401196 T add_cc
0000000000401287 T printrub
00000000004012eb T memoryLayout
0000000000401415 T main
0000000000401520 T _fini
0000000000402000 R _IO_stdin_used
000000000040218c r __GNU_EH_FRAME_HDR
0000000000403df8 d _DYNAMIC
0000000000403fe8 d _GLOBAL_OFFSET_TABLE_
0000000000404040 D __data_start
0000000000404040 W data_start
0000000000404048 D __dso_handle
0000000000404050 D exename
0000000000404058 D _edata
0000000000404058 D __TMC_END__
0000000000404060 B __bss_start
0000000000404080 B tot_cc
00000000004040a0 B rubr_dyn
00000000004043c0 B _end

=== SIZE ===
   text	   data	    bss	    dec	    hex	filename
   3186	    624	    864	   4674	   1242	simple_v2_dbg_bin

=== OBJDUMP -h (section headers) ===

simple_v2_dbg_bin:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .note.gnu.property 00000040  0000000000400388  0000000000400388  00000388  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.build-id 00000024  00000000004003c8  00000000004003c8  000003c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .interp       0000001c  00000000004003ec  00000000004003ec  000003ec  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000400408  0000000000400408  00000408  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000138  0000000000400428  0000000000400428  00000428  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       000000bc  0000000000400560  0000000000400560  00000560  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000001a  000000000040061c  000000000040061c  0000061c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000040  0000000000400638  0000000000400638  00000638  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000060  0000000000400678  0000000000400678  00000678  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     000000c0  00000000004006d8  00000000004006d8  000006d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000001b  0000000000401000  0000000000401000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000090  0000000000401020  0000000000401020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         0000046d  00000000004010b0  00000000004010b0  000010b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         0000000d  0000000000401520  0000000000401520  00001520  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       0000018c  0000000000402000  0000000000402000  00002000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 00000044  000000000040218c  000000000040218c  0000218c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     000000ec  00000000004021d0  00000000004021d0  000021d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .sframe       00000067  00000000004022c0  00000000004022c0  000022c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .note.ABI-tag 00000020  0000000000402344  0000000000402344  00002344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .init_array   00000008  0000000000403de8  0000000000403de8  00002de8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .fini_array   00000008  0000000000403df0  0000000000403df0  00002df0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000001d0  0000000000403df8  0000000000403df8  00002df8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000020  0000000000403fc8  0000000000403fc8  00002fc8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000058  0000000000403fe8  0000000000403fe8  00002fe8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000018  0000000000404040  0000000000404040  00003040  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          00000360  0000000000404060  0000000000404060  00003058  2**5
                  ALLOC
 26 .comment      0000001b  0000000000000000  0000000000000000  00003058  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000030  0000000000000000  0000000000000000  00003073  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_info   000002da  0000000000000000  0000000000000000  000030a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_abbrev 00000159  0000000000000000  0000000000000000  0000337d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_line   00000136  0000000000000000  0000000000000000  000034d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 31 .debug_str    0000012f  0000000000000000  0000000000000000  0000360c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_line_str 000000b7  0000000000000000  0000000000000000  0000373b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

=== DUMP BYTES .rodata (readelf -x) ===

Hex dump of section '.rodata':
  0x00402000 01000200 00000000 52756272 69636120 ........Rubrica 
  0x00402010 54656c65 666f6e69 63610025 73202d20 Telefonica.%s - 
  0x00402020 2573000a 2d2d2d20 52756272 69636120 %s..--- Rubrica 
  0x00402030 2d2d2d00 72756272 5f64796e 5b25645d ---.rubr_dyn[%d]
  0x00402040 202d3e20 25730a00 0a2d2d2d 204d656d  -> %s...--- Mem
  0x00402050 6f727920 4c61796f 7574202d 2d2d0000 ory Layout ---..
  0x00402060 2e746578 74202066 756e7a69 6f6e6520 .text  funzione 
  0x00402070 6d656d6f 72794c61 796f7574 3a202570 memoryLayout: %p
  0x00402080 0a000000 00000000 2e726f64 61746120 .........rodata 
  0x00402090 6578656e 616d6520 28737472 696e6761 exename (stringa
  0x004020a0 293a2025 70202d3e 2025730a 002e6461 ): %p -> %s...da
  0x004020b0 74612020 2026746f 745f6363 3a202570 ta   &tot_cc: %p
  0x004020c0 202d3e20 25640a00 2e627373 20202020  -> %d...bss    
  0x004020d0 72756272 5f64796e 5b305d20 28736c6f rubr_dyn[0] (slo
  0x004020e0 74293a20 2570202d 3e202570 0a007374 t): %p -> %p..st
  0x004020f0 61636b20 20266c6f 63616c5f 7661723a ack  &local_var:
  0x00402100 2025700a 00686561 70202072 7562725f  %p..heap  rubr_
  0x00402110 64796e5b 305d3a20 2570202d 3e202573 dyn[0]: %p -> %s
  0x00402120 0a000000 00000000 68656170 20207275 ........heap  ru
  0x00402130 62725f64 796e5b30 5d3a206e 6f6e2061 br_dyn[0]: non a
  0x00402140 6e636f72 6120616c 6c6f6361 746f000a ncora allocato..
  0x00402150 0a090920 2573200a 0a0a004d 6172696f ... %s ....Mario
  0x00402160 00416e6e 61004c75 63610033 33333132 .Anna.Luca.33312
  0x00402170 33343536 37003332 30393837 36353433 34567.3209876543
  0x00402180 00333438 35353534 34333300          .3485554433.


=== ESECUZIONE NORMALE (setarch -R per disabilitare ASLR) ===


		 Rubrica Telefonica 



--- Rubrica ---
rubr_dyn[0] -> Mario - 3331234567
rubr_dyn[1] -> Anna - 3209876543
rubr_dyn[2] -> Luca - 3485554433

--- Memory Layout ---
.text  funzione memoryLayout: 0x4012eb
.rodata exename (stringa): 0x402008 -> Rubrica Telefonica
.data   &tot_cc: 0x404080 -> 3
.bss    rubr_dyn[0] (slot): 0x4040a0 -> 0x406320
stack  &local_var: 0x7fffffffe314
heap  rubr_dyn[0]: 0x406320 -> Mario - 3331234567

=== ESECUZIONE sotto GDB per dump stack & memoria ===
GDB dump saved to gdb_dump.txt

(rodata dumped to rodata.bin, hexdump in rodata_hexdump.txt)

=== GENERAZIONE REPORT (Python) ===
Report generated: simple_v2_analysis.md and simple_v2_analysis.json
