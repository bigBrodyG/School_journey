# MAPPA PRECISA DELLA MEMORIA - LAYOUT BYTE-PER-BYTE

## 📊 LAYOUT GENERALE (Indirizzi Virtuali x86-64)

```
0xFFFFFFFFFFFFFFFF ┌─────────────────────────────────────┐ ← Kernel Space
                   │                                     │
0x7FFFFFFFF000     ├─────────────────────────────────────┤
                   │            STACK                    │ ← 132 KB disponibili
0x7FFFFFFDE000     ├─────────────────────────────────────┤
                   │                                     │
                   │         Memory Gap                  │
                   │                                     │
0x426000           ├─────────────────────────────────────┤
                   │               HEAP                  │ ← 132 KB disponibili
0x405000           ├─────────────────────────────────────┤
0x404078           │─────────────────────────────────────│
                   │     .bss (16 bytes)                 │
0x404068           ├─────────────────────────────────────┤
                   │     .data (32 bytes)                │
0x404048           ├─────────────────────────────────────┤
                   │                                     │
0x403000           ├─────────────────────────────────────┤
                   │     .rodata (664 bytes)             │
0x402000           ├─────────────────────────────────────┤
                   │                                     │
0x401000           ├─────────────────────────────────────┤
                   │     .text (1545 bytes)              │
0x4010C0           ├─────────────────────────────────────┤
                   │                                     │
0x400000           └─────────────────────────────────────┘ ← Program Base
```

---

## 🎯 SEGMENTO .TEXT - CODICE FUNZIONI

```
┌─ Indirizzo ─┬─ Dimensione ─┬────── Funzione ────────┬── Bytes ──┐
│ 0x4011A6   │    179 B     │  create_student()       │   0xB3    │
│ 0x401259   │     ~60 B    │  print_student()        │   ~0x3C   │  
│ 0x401295   │    ~180 B    │  show_memory_layout()   │   ~0xB4   │
│ 0x401448   │    640 B     │  main()                 │   0x2A0   │
└────────────┴──────────────┴─────────────────────────┴───────────┘
TOTALE: 1545 bytes (0x609) - Confermato da readelf
```

---

## 🔤 SEGMENTO .RODATA - STRINGHE E COSTANTI

```
┌─ Offset ─┬─ Indirizzo ─┬── Contenuto ──────────────────┬─ Bytes ─┐
│   +0x00  │  0x402000  │  "MemoryDemo\0"              │   12    │
│   +0x0C  │  0x40200C  │  [padding alignment]          │    4    │
│   +0x10  │  0x402010  │  "=== %s ===\n\0"           │   11    │
│   +0x1B  │  0x40201B  │  [padding]                    │    5    │
│   +0x20  │  0x402020  │  "Errore malloc!\n\0"        │   16    │
│   +0x30  │  0x402030  │  "ID: %d, Nome: %s, Voto: %.1f\n\0" │ 27 │
│   +0x4B  │  0x40204B  │  [padding]                    │    5    │
│   +0x50  │  0x402050  │  "\n=== LAYOUT MEMORIA ===\n\0" │   25  │
│         ...più format strings...                              │
│  +0x1D3  │  0x4021D3  │  "Mario\0"                   │    6    │
│  +0x1D9  │  0x4021D9  │  "Anna\0"                    │    5    │
│         ...padding finale...                                  │
│  +0x298  │  0x402298  │  [fine segmento]             │   ---   │
└──────────┴────────────┴───────────────────────────────┴─────────┘
TOTALE: 664 bytes con ~60% utilizzato, ~40% padding
```

---

## 🏠 SEGMENTO .DATA - VARIABILI GLOBALI INIZIALIZZATE

```
┌─ Indirizzo ─┬─ Variabile ──────┬─ Tipo ────┬─ Valore ────────┬─ Bytes ─┐
│  0x404048  │  counter         │  int      │  0x0000000A     │    4    │
│  0x40404C  │  [padding]       │  ---      │  0x00000000     │    4    │
│  0x404050  │  program_name    │  char*    │  0x0000000402000│    8    │
│  0x404058  │  [reserved]      │  ---      │  0x0000...      │   16    │
│  0x404068  │  [fine segmento] │  ---      │  ---            │   ---   │
└────────────┴──────────────────┴───────────┴─────────────────┴─────────┘
TOTALE: 32 bytes - 12 bytes dati + 20 bytes padding/riservati
```

**NOTA CRITICA:** program_name punta a 0x402000 (.rodata) dove inizia "MemoryDemo"

---

## 🫥 SEGMENTO .BSS - VARIABILI NON INIZIALIZZATE

```
┌─ Indirizzo ─┬─ Variabile ──┬─ Tipo ────┬─ Valore ─────┬─ Bytes ─┐
│  0x404068  │  global_ptr  │  char*    │  0x00000000  │    8    │
│  0x404070  │  [riservato] │  ---      │  0x00000000  │    8    │
└────────────┴──────────────┴───────────┴──────────────┴─────────┘
TOTALE: 16 bytes - Solo 50% utilizzati
```

---

## 📚 STACK - FRAME DELLE FUNZIONI

### FRAME create_student() - PRIMO BREAKPOINT

```
RSP: 0x7FFFFFFFE240
┌─ Stack Addr ──┬─ Contenuto ──────────────────────┬─ Descrizione ─────┐
│ 0x7FFFFFFFE240│  0x00000000004021D3             │ param: name        │
│ 0x7FFFFFFFE248│  0x0000000141080000             │ param: id+score    │
│ 0x7FFFFFFFE250│  0x0000000000000000             │ padding            │
│ 0x7FFFFFFFE258│  0x00007FFFF7FFE2F0             │ local: s (ptr)     │
│ 0x7FFFFFFFE260│  0x00007FFFFFFFE2A0             │ saved RBP          │
│ 0x7FFFFFFFE268│  0x0000000000401448             │ return address     │
└───────────────┴──────────────────────────────────┴────────────────────┘
RBP: 0x7FFFFFFFE260
FRAME SIZE: 40 bytes
```

### FRAME create_student() - SECONDO BREAKPOINT

```
┌─ Stack Addr ──┬─ Contenuto ──────────────────────┬─ Descrizione ─────┐
│ 0x7FFFFFFFE240│  0x00000000004021D9             │ param: name        │
│ 0x7FFFFFFFE248│  0x0000000241100000             │ param: id+score    │
│ 0x7FFFFFFFE250│  0x0000000000000000             │ padding            │
│ 0x7FFFFFFFE258│  0x0000000000405720             │ local: s (ptr)     │
│ 0x7FFFFFFFE260│  0x00007FFFFFFFE2A0             │ saved RBP          │
│ 0x7FFFFFFFE268│  0x0000000000401465             │ return address     │
└───────────────┴──────────────────────────────────┴────────────────────┘
```

**OSSERVAZIONE CRITICA:** Il secondo malloc ha restituito 0x405720 (heap del processo) invece che heap di sistema.

---

## 🏗️ HEAP - ALLOCAZIONI DINAMICHE

### ALLOCAZIONI VERIFICATE:

```
┌─ Ordine ─┬─ Indirizzo ────┬─ Dimensione ─┬─── Contenuto ────────────┐
│    1°    │ 0x7FFFF7FFE2F0 │   28 bytes   │ Student{1,"Mario",8.5}   │
│    2°    │ 0x405720       │   28 bytes   │ Student{2,"Anna",9.0}    │
│    3°    │ 0x405xxx       │   50 bytes   │ "stringa su heap"        │
│    4°    │ 0x405xxx       │   20 bytes   │ calloc array[5]          │
│    5°    │ 0x405xxx       │   32 bytes   │ realloc array[8]         │
└──────────┴────────────────┴──────────────┴──────────────────────────┘
TOTALE PAYLOAD: 158 bytes
METADATA HEAP: ~50 bytes (headers malloc)
TOTALE UTILIZZATO: ~208 bytes su 132KB (0.15%)
```

---

## 🧩 STRUTTURA Student - LAYOUT INTERNO

```
struct Student {                 ← Indirizzo base (es. 0x405720)
┌─ Offset ─┬─ Campo ─┬─ Tipo ────┬─ Dim ─┬──── Valore ────┐
│   +0x00  │   id    │   int     │  4 B  │  0x00000001   │
│   +0x04  │  name   │ char[20]  │ 20 B  │ "Mario\0\0..." │
│   +0x18  │  score  │  float    │  4 B  │  0x41080000   │ ← 8.5 in IEEE754
└──────────┴─────────┴───────────┴───────┴───────────────┘
TOTALE: 28 bytes (confermato da sizeof)
}
```

**VERIFICA IEEE754:** 8.5 = 0x41080000 (1.0625 × 2³ in single precision)

---

## 📏 ANALISI DELL'EFFICIENZA SPAZIALE

```
┌─ Segmento ─┬─ Allocato ─┬─ Utilizzato ─┬─ Overhead ─┬─ Efficienza ─┐
│   .text    │  1545 B    │   ~1400 B    │    ~10%    │     90%      │
│  .rodata   │   664 B    │    ~400 B    │    ~40%    │     60%      │
│   .data    │    32 B    │     12 B     │    ~63%    │     37%      │
│   .bss     │    16 B    │      8 B     │    ~50%    │     50%      │
│   Stack    │  132 KB    │    ~200 B    │   99.85%   │    0.15%     │
│   Heap     │  132 KB    │    ~200 B    │   99.85%   │    0.15%     │
└────────────┴────────────┴──────────────┴────────────┴──────────────┘
```

**CONSIDERAZIONE FINALE:** L'overhead di sistema (padding, allineamento, riserve) rappresenta una frazione significativa soprattutto nei segmenti dati, mentre Stack e Heap mostrano l'allocazione conservativa tipica dei sistemi moderni per gestire picchi di utilizzo futuro.